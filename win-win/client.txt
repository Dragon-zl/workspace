using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace TCPClient
{
    public class MySQL
    {
        TcpSocket MyTcpSocket = new TcpSocket();
        private Dictionary<int, string> SQLDictionary = new Dictionary<int, string>();
        //INSERT INTO pcba(barcode,date,status,pat_1,pat_2,pat_3) VALUES('G520DZL00002','2022/02/24','pass',3.4,7.32,6.66);

        public MySQL()
        {
            SQLDictionary.Add(1, ",date");
            SQLDictionary.Add(2, ",status");
            SQLDictionary.Add(3, ",pat_1");
            SQLDictionary.Add(4, ",pat_2");
            SQLDictionary.Add(5, ",pat_3");
            SQLDictionary.Add(6, ",pro_1");
            SQLDictionary.Add(7, ",pro_2");
            SQLDictionary.Add(8, ",pro_3");
        }
        //MySQL插入一行
        public bool InsertDataLine(string data, Socket sock , ref string recvinfo)
        {
            try {                do
                {
                    //MySQL 插入数据 协议包头 + data
                    string protocolHead = "MySQL:Insert:" + data;
                    //发送插入的数据
                    if (!MyTcpSocket.SockSendData(protocolHead, sock))
                    {
                        Log.LogExcept("Send " + protocolHead + "fail");
                        break;
                    }
                    string recvData = "";
                    //等待服务器返回结果
                    if (!WaitServerMySQLInsertResult(sock, ref recvData, ref recvinfo))
                    {
                        Log.LogExcept("等待Server端MySQL插入结果：" + recvinfo);
                        break;
                    }
                    return true;
                } while (false);
                return false;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                return false;
            }
        }
        /// <summary>
        /// 通过条码进行数据库查询        /// </summary>
        /// <param name="barcode"></param>
        /// <param name="sock"></param>
        /// <returns></returns>
        public bool QueryDataLine(string barcode, Socket sock, ref string recvInfo)
        {
            try
            {
                do
                {
                    //MySQL 查询数据 协议包头 + data
                    string protocolHead = "MySQL:Query:" + barcode;
                    //发送查询的数据条码
                    if (!MyTcpSocket.SockSendData(protocolHead, sock))
                    {
                        Log.LogExcept("Send " + protocolHead + "fail");
                        break;
                    }
                    string recvData = "";
                    //等待服务器返回结果
                    if (!WaitServerMySQLQueryResult(sock, ref  recvData,  ref  recvInfo))
                    {
                        Log.LogExcept("等待Server端MySQL查询结果：" + recvInfo);
                        break;
                    }
                    //将查询到的数据进行显示                    string[] words = recvData.Split(' ');
                    Form1.form.pcbaDataGridView1.Rows[0].Cells[0].Value = barcode;
                    for (int i = 1; i < words.Length; i++)
                    {
                        Form1.form.pcbaDataGridView1.Rows[0].Cells[i].Value = words[i-1];
                    }
                    return true;
                } while (false);
                return false;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                return false;
            }
        }
        

        private bool WaitServerMySQLQueryResult(Socket sock, ref string recvData,  ref string recvInfo)
        {
            try
            {
                if (!MyTcpSocket.SockRecvData(sock, ref recvData, ref recvInfo))
                {
                    return false;
                }
                //判断是否匹配 正确的插入成功返回的信息 
                if (recvData.Length > 5)
                {                    recvInfo = recvData;
                    return true;
                }
                else
                {
                    recvInfo = recvData;
                    return false;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                return false;
            }
        }

        //等待服务端的MySQL insert 插入结果
        private bool WaitServerMySQLInsertResult(Socket sock, ref string recvData ,ref string recvInfo)
        {
            try
            {
                if (!MyTcpSocket.SockRecvData(sock, ref recvData, ref recvInfo))
                {
                    return false;
                }
                //判断是否匹配 正确的插入成功返回的信息
                recvInfo = recvData;
                if(recvInfo.Contains("Finish"))
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                return false;
            }
        }
        public bool SQLInertPcbaProcessTABLES(ref string sql)
        {
            //pcba表 sql
            try
            {
                string sql_pcba = "";
                string sql_process = "";
                //用来保存 DataGridView 内容
                string[] str = new string[9];
                for (int i = 0; i < 1; i++)
                {
                    string sql_cmd = "INSERT INTO pcba(barcode";
                    string sql_data = "VALUES(";
                    //通过循环，将 DataGridView 内容 保存到 str
                    for (int j = 0; j<9; ++j)
                    {
                        str[j] = (string)Form1.form.pcbaDataGridView1.Rows[i].Cells[j].Value;
                    }
                    //条码不能为空
                    if (str[0] == null)
                    {
                        return false;
                    }
                    //条码                    sql_data += ("'" + str[0] + "'");
                    //线获取 pcbasql
                    for(int j = 1; j < 6; ++j)
                    {
                        if(str[j] != null)
                        {
                            if(j >= 3)
                            {
                                sql_cmd += SQLDictionary[j];
                                sql_data += ("," + str[j]);
                            }
                            else
                            {
                                sql_cmd += SQLDictionary[j];
                                sql_data += ("," + "'" + str[j] + "'");
                            }
                            
                        }
                    }
                    //加上 ")"
                    sql_cmd += ")";
                    sql_data += ")";
                    //拼接
                    sql_pcba = sql_cmd + " " + sql_data;

                    //解析 process sql
                    sql_cmd = "INSERT INTO process_state(barcode";                    sql_data = "VALUES('" + str[0] + "'";
                    for(int j = 6; j<9; ++j)
                    {
                        if (str[j] != null)
                        {
                            sql_cmd += SQLDictionary[j];
                            sql_data += ("," + "'" + str[j] + "'"); 
                        }
                    }
                    //加上 ")"
                    sql_cmd += ")";
                    sql_data += ")";
                    //拼接
                    sql_process = sql_cmd + " " + sql_data;

                    //最终合成
                    sql = sql_pcba + '"' + sql_process;
                }
                return true;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                return false;
            }
            
            
        }
        public bool MySQLInsert1000Line(string data1, string data2, int num, Socket sock)        {
            try
            {
                int i;
                //'G419 + 1000 + 字母 + 0000  + ','2022/02/24','pass',3.4,7.32,6.66
                string str1 = "";
                for (i = 0; i < num; ++i)
                {
                    //MySQL 插入数据 协议包头 + data
                    string protocolHead = "MySQL:Insert:";
                    switch (i/100000) {
                        case 0:
                            str1 = "A";
                            break;
                        case 1:
                            str1 = "B";
                            break;
                        case 2:
                            str1 = "C";
                            break;
                        case 3:
                            str1 = "D";
                            break;
                        case 4:
                            str1 = "E";
                            break;
                        case 5:                            str1 = "F";
                            break;
                        case 6:
                            str1 = "G";
                            break;
                        case 7:
                            str1 = "H";
                            break;
                        case 8:
                            str1 = "I";
                            break;
                        case 9:
                            str1 = "J";
                            break;
                        default:
                            str1 = "K";
                            break;
                    }


                    Random rd = new Random();
                    protocolHead = protocolHead + data1 + 
                                (10000 + rd.Next(0, 9999)).ToString() + 
                                str1 + (num + i).ToString() + data2;

                    //发送插入的数据
                    if (!MyTcpSocket.SockSendData(protocolHead, sock))
                    {                        Log.LogExcept("Send " + protocolHead + "fail");
                        break;
                    }
                    string recvInfo = "";
                    string recvData = "";
                    //等待服务器返回结果
                    if (!WaitServerMySQLInsertResult(sock, ref recvData, ref recvInfo))
                    {
                        Log.LogExcept("等待Server端MySQL插入结果：" + recvInfo);
                        break;
                    }
                }
                if(i == num)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
                return false;
            }
        }
    }
}
